{"ast":null,"code":"var _jsxFileName = \"/home/pea/Code/squarranger/client/src/contexts/Context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport kick from '../sounds/kick.wav';\nimport snare from '../sounds/snare.wav';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv'); // `mongodb+srv://CodeKrakken:wcQjPFIGo2aEU7CR@cluster0.bfg8v.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;\n\n\nconst username = process.env.MONGODB_USERNAME;\nconst password = process.env.MONGODB_PASSWORD;\nexport const Context = /*#__PURE__*/createContext();\n\nconst ContextProvider = props => {\n  _s();\n\n  const data = {\n    voices: [],\n    sounds: [],\n    soundBank: [kick, snare]\n  };\n  const [state, setState] = useState(data);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      state,\n      setState\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"BesDbRegePIGgoZFDSl1jbsE5cA=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/pea/Code/squarranger/client/src/contexts/Context.js"],"names":["createContext","useEffect","useState","kick","snare","React","require","username","process","env","MONGODB_USERNAME","password","MONGODB_PASSWORD","Context","ContextProvider","props","data","voices","sounds","soundBank","state","setState","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEAC,OAAO,CAAC,QAAD,CAAP,C,CAEA;;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAA7B;AACA,MAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAR,CAAYG,gBAA7B;AAEA,OAAO,MAAMC,OAAO,gBAAGb,aAAa,EAA7B;;AAEP,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAEjC,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,EADG;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXC,IAAAA,SAAS,EAAE,CAAChB,IAAD,EAAOC,KAAP;AAHA,GAAb;AAMA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAACc,IAAD,CAAlC;AAEA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAzB;AAAA,cACGN,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;GAAMR,e;;KAAAA,e;AAiBN,eAAeA,eAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport kick   from '../sounds/kick.wav';\nimport snare  from '../sounds/snare.wav'\nimport React from 'react';\n\nrequire('dotenv')\n\n// `mongodb+srv://CodeKrakken:wcQjPFIGo2aEU7CR@cluster0.bfg8v.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;\n\nconst username = process.env.MONGODB_USERNAME\nconst password = process.env.MONGODB_PASSWORD\n\nexport const Context = createContext()\n\nconst ContextProvider = (props) => {\n\n  const data = {\n    voices: [],\n    sounds: [],\n    soundBank: [kick, snare]\n  }\n\n  const [state, setState] = useState(data)\n  \n  return (\n    <Context.Provider value={{state, setState}}>\n      {props.children}\n    </Context.Provider>\n  )\n}\n\nexport default ContextProvider"]},"metadata":{},"sourceType":"module"}