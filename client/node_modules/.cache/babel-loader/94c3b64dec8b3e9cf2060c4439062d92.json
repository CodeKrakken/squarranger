{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _classCallCheck = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CollectionsOperation = void 0;\n\nvar operation_1 = require(\"./operation\");\n\nvar collection_1 = require(\"../collection\");\n/** @internal */\n\n\nvar CollectionsOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(CollectionsOperation, _operation_1$Abstract);\n\n  function CollectionsOperation(db, options) {\n    var _this;\n\n    _classCallCheck(this, CollectionsOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CollectionsOperation).call(this, options));\n    _this.options = options;\n    _this.db = db;\n    return _this;\n  }\n\n  _createClass(CollectionsOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      var db = this.db; // Let's get the collection names\n\n      db.listCollections({}, _objectSpread({}, this.options, {\n        nameOnly: true,\n        readPreference: this.readPreference,\n        session: session\n      })).toArray(function (err, documents) {\n        if (err || !documents) return callback(err); // Filter collections removing any illegal ones\n\n        documents = documents.filter(function (doc) {\n          return doc.name.indexOf('$') === -1;\n        }); // Return the collection objects\n\n        callback(undefined, documents.map(function (d) {\n          return new collection_1.Collection(db, d.name, db.s.options);\n        }));\n      });\n    }\n  }]);\n\n  return CollectionsOperation;\n}(operation_1.AbstractOperation);\n\nexports.CollectionsOperation = CollectionsOperation;","map":null,"metadata":{},"sourceType":"script"}