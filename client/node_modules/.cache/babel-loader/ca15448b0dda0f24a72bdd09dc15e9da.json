{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/pea/Code/squarranger/client/src/components/Matrix.js\";\n\nimport Voice from \"./Voice\";\nimport { useContext, useEffect } from \"react\";\nimport { Context } from '../contexts/Context';\nimport AddSample from \"./AddSample\";\nimport React from 'react';\n\nvar Matrix = function Matrix() {\n  var context = useContext(Context);\n  useEffect(function () {\n    for (var voice = 0; voice < 2; voice++) {\n      var voiceData = [];\n\n      for (var beat = 0; beat < 16; beat++) {\n        var status = Math.round(Math.random());\n        voiceData.push(status);\n      }\n\n      var sound = Math.round(Math.random() * (context.state.soundBank.length - 1));\n      console.log(sound);\n      context.state.voices.push(voiceData);\n      context.state.sounds.push(sound);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n    context.setState({\n      voices: context.state.voices,\n      sounds: context.state.sounds,\n      soundBank: context.state.soundBank\n    });\n  }, []);\n\n  if (context && context.state && context.state.voices) {\n    var voices = context.state.voices.map(function (voice, i) {\n      var voiceId = i;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: voiceId,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AddSample, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Voice, {\n        key: voiceId,\n        voiceId: voiceId,\n        boxes: voice,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }));\n    });\n    return voices;\n  }\n\n  ;\n};\n\nexport default Matrix;","map":{"version":3,"sources":["/home/pea/Code/squarranger/client/src/components/Matrix.js"],"names":["Voice","useContext","useEffect","Context","AddSample","React","Matrix","context","voice","voiceData","beat","status","Math","round","random","push","sound","state","soundBank","length","console","log","voices","sounds","setState","map","i","voiceId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAEnB,MAAMC,OAAO,GAAGN,UAAU,CAACE,OAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,SAAK,IAAIM,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,CAA5B,EAA+BA,KAAK,EAApC,EAAwC;AACtC,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAG,EAA1B,EAA8BA,IAAI,EAAlC,EAAsC;AACpC,YAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAb;AACAL,QAAAA,SAAS,CAACM,IAAV,CAAeJ,MAAf;AACD;;AACD,UAAIK,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,OAAO,CAACU,KAAR,CAAcC,SAAd,CAAwBC,MAAxB,GAA+B,CAAhD,CAAX,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAT,MAAAA,OAAO,CAACU,KAAR,CAAcK,MAAd,CAAqBP,IAArB,CAA0BN,SAA1B;AACAF,MAAAA,OAAO,CAACU,KAAR,CAAcM,MAAd,CAAqBR,IAArB,CAA0BC,KAA1B;AACD,KAXa,CAYd;;;AACAT,IAAAA,OAAO,CAACiB,QAAR,CAAiB;AAAEF,MAAAA,MAAM,EAAEf,OAAO,CAACU,KAAR,CAAcK,MAAxB;AAAgCC,MAAAA,MAAM,EAAEhB,OAAO,CAACU,KAAR,CAAcM,MAAtD;AAA8DL,MAAAA,SAAS,EAAEX,OAAO,CAACU,KAAR,CAAcC;AAAvF,KAAjB;AAED,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIX,OAAO,IAAIA,OAAO,CAACU,KAAnB,IAA4BV,OAAO,CAACU,KAAR,CAAcK,MAA9C,EAAsD;AACpD,QAAIA,MAAM,GAAGf,OAAO,CAACU,KAAR,CAAcK,MAAd,CAAqBG,GAArB,CAAyB,UAACjB,KAAD,EAAQkB,CAAR,EAAc;AAElD,UAAIC,OAAO,GAAGD,CAAd;AAEA,0BACE;AAAK,QAAA,GAAG,EAAEC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,KAAD;AACE,QAAA,GAAG,EAAEA,OADP;AAEE,QAAA,OAAO,EAAEA,OAFX;AAGE,QAAA,KAAK,EAAEnB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAUD,KAdY,CAAb;AAiBA,WAAOc,MAAP;AACD;;AAAA;AAEF,CA1CD;;AA4CA,eAAehB,MAAf","sourcesContent":["import Voice from \"./Voice\"\nimport { useContext, useEffect } from \"react\"\nimport { Context } from '../contexts/Context'\nimport AddSample from \"./AddSample\"\nimport React from 'react';\n\n\nconst Matrix = () => {\n  \n  const context = useContext(Context)\n\n  useEffect(() => {\n    for (let voice = 0; voice < 2; voice++) {\n      let voiceData = []\n      for (let beat = 0; beat < 16; beat++) {\n        let status = Math.round(Math.random())\n        voiceData.push(status)\n      }\n      let sound = Math.round(Math.random() * (context.state.soundBank.length-1))\n      console.log(sound)\n      context.state.voices.push(voiceData)\n      context.state.sounds.push(sound)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    context.setState({ voices: context.state.voices, sounds: context.state.sounds, soundBank: context.state.soundBank })\n\n  }, [])\n    \n  if (context && context.state && context.state.voices) {\n    let voices = context.state.voices.map((voice, i) => {\n\n      let voiceId = i\n\n      return (\n        <div key={voiceId}>\n          <AddSample />\n          <Voice \n            key={voiceId}\n            voiceId={voiceId}\n            boxes={voice}\n          />\n        </div> \n      )\n    })\n\n    \n    return voices\n  };\n\n}\n \nexport default Matrix;"]},"metadata":{},"sourceType":"module"}