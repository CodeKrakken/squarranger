{"ast":null,"code":"import _slicedToArray from \"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/pea/Code/squarranger/client/src/components/Play.js\";\n\nimport { useContext } from \"react\";\nimport { Context } from '../contexts/Context';\nimport useSound from 'use-sound';\nimport React from 'react';\n\nvar Play = function Play() {\n  var context = useContext(Context); // const state.voices = context.state.voices\n\n  var _useSound = useSound(context.state.soundBank[0]),\n      _useSound2 = _slicedToArray(_useSound, 1),\n      play0 = _useSound2[0];\n\n  var _useSound3 = useSound(context.state.soundBank[1]),\n      _useSound4 = _slicedToArray(_useSound3, 1),\n      play1 = _useSound4[0];\n\n  var play = function play(state) {\n    var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    for (var voice in state.voices) {\n      voice = +voice;\n\n      if (state.voices[voice][i]) {\n        playVoice(state, voice);\n      }\n    }\n\n    if (i < state.voices[0].length) {\n      setTimeout(function () {\n        i++;\n        play(state, i);\n      }, 125);\n    }\n  };\n\n  var playVoice = function playVoice(state, i) {\n    console.log(state);\n\n    if (state.sounds[i] === 0) {\n      play0();\n    }\n\n    if (state.sounds[i] === 1) {\n      play1();\n    }\n  };\n\n  var handleClick = function handleClick(e) {\n    play(context.state);\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Play\");\n};\n\nexport default Play;","map":{"version":3,"sources":["/home/pea/Code/squarranger/client/src/components/Play.js"],"names":["useContext","Context","useSound","React","Play","context","state","soundBank","play0","play1","play","i","voice","voices","playVoice","length","setTimeout","console","log","sounds","handleClick","e"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjB,MAAMC,OAAO,GAAGL,UAAU,CAACC,OAAD,CAA1B,CAFiB,CAGjB;;AAHiB,kBAIDC,QAAQ,CAACG,OAAO,CAACC,KAAR,CAAcC,SAAd,CAAwB,CAAxB,CAAD,CAJP;AAAA;AAAA,MAIVC,KAJU;;AAAA,mBAKDN,QAAQ,CAACG,OAAO,CAACC,KAAR,CAAcC,SAAd,CAAwB,CAAxB,CAAD,CALP;AAAA;AAAA,MAKVE,KALU;;AAOjB,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACJ,KAAD,EAAgB;AAAA,QAARK,CAAQ,uEAAN,CAAM;;AAE3B,SAAK,IAAIC,KAAT,IAAkBN,KAAK,CAACO,MAAxB,EAAgC;AAACD,MAAAA,KAAK,GAAG,CAACA,KAAT;;AAC/B,UAAIN,KAAK,CAACO,MAAN,CAAaD,KAAb,EAAoBD,CAApB,CAAJ,EAA4B;AAC1BG,QAAAA,SAAS,CAACR,KAAD,EAAQM,KAAR,CAAT;AACD;AACF;;AAED,QAAID,CAAC,GAACL,KAAK,CAACO,MAAN,CAAa,CAAb,EAAgBE,MAAtB,EAA6B;AAC3BC,MAAAA,UAAU,CAAC,YAAU;AACnBL,QAAAA,CAAC;AACDD,QAAAA,IAAI,CAACJ,KAAD,EAAQK,CAAR,CAAJ;AACD,OAHS,EAGR,GAHQ,CAAV;AAID;AACF,GAdD;;AAgBA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAACR,KAAD,EAAQK,CAAR,EAAc;AAC9BM,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;;AACA,QAAIA,KAAK,CAACa,MAAN,CAAaR,CAAb,MAAoB,CAAxB,EAA2B;AAAEH,MAAAA,KAAK;AAAI;;AACtC,QAAIF,KAAK,CAACa,MAAN,CAAaR,CAAb,MAAoB,CAAxB,EAA2B;AAAEF,MAAAA,KAAK;AAAI;AACvC,GAJD;;AAMA,MAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzBX,IAAAA,IAAI,CAACL,OAAO,CAACC,KAAT,CAAJ;AACD,GAFD;;AAIA,sBACE;AAAQ,IAAA,OAAO,EAAEc,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,CAtCD;;AAwCA,eAAehB,IAAf","sourcesContent":["import { useContext } from \"react\";\nimport { Context } from '../contexts/Context'\nimport useSound from 'use-sound';\nimport React from 'react';\n\nconst Play = () => {\n\n  const context = useContext(Context)\n  // const state.voices = context.state.voices\n  const [play0] = useSound(context.state.soundBank[0]);\n  const [play1] = useSound(context.state.soundBank[1]);\n\n  const play = (state, i=0) => {\n\n    for (let voice in state.voices) {voice = +voice\n      if (state.voices[voice][i]) { \n        playVoice(state, voice)\n      }\n    }\n\n    if (i<state.voices[0].length){\n      setTimeout(function(){\n        i++;\n        play(state, i);\n      },125);\n    }\n  }\n\n  const playVoice = (state, i) => {\n    console.log(state)\n    if (state.sounds[i] === 0) { play0() }\n    if (state.sounds[i] === 1) { play1() }\n  }\n\n  const handleClick = (e) => {\n    play(context.state)\n  }\n\n  return ( \n    <button onClick={handleClick}>\n      Play\n    </button>\n   );\n}\n \nexport default Play;"]},"metadata":{},"sourceType":"module"}