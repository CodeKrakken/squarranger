{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServerHeartbeatFailedEvent = exports.ServerHeartbeatSucceededEvent = exports.ServerHeartbeatStartedEvent = exports.TopologyClosedEvent = exports.TopologyOpeningEvent = exports.TopologyDescriptionChangedEvent = exports.ServerClosedEvent = exports.ServerOpeningEvent = exports.ServerDescriptionChangedEvent = void 0;\n/**\n * Emitted when server description changes, but does NOT include changes to the RTT.\n * @public\n * @category Event\n */\n\nvar ServerDescriptionChangedEvent =\n/** @internal */\nfunction ServerDescriptionChangedEvent(topologyId, address, previousDescription, newDescription) {\n  _classCallCheck(this, ServerDescriptionChangedEvent);\n\n  this.topologyId = topologyId;\n  this.address = address;\n  this.previousDescription = previousDescription;\n  this.newDescription = newDescription;\n};\n\nexports.ServerDescriptionChangedEvent = ServerDescriptionChangedEvent;\n/**\n * Emitted when server is initialized.\n * @public\n * @category Event\n */\n\nvar ServerOpeningEvent =\n/** @internal */\nfunction ServerOpeningEvent(topologyId, address) {\n  _classCallCheck(this, ServerOpeningEvent);\n\n  this.topologyId = topologyId;\n  this.address = address;\n};\n\nexports.ServerOpeningEvent = ServerOpeningEvent;\n/**\n * Emitted when server is closed.\n * @public\n * @category Event\n */\n\nvar ServerClosedEvent =\n/** @internal */\nfunction ServerClosedEvent(topologyId, address) {\n  _classCallCheck(this, ServerClosedEvent);\n\n  this.topologyId = topologyId;\n  this.address = address;\n};\n\nexports.ServerClosedEvent = ServerClosedEvent;\n/**\n * Emitted when topology description changes.\n * @public\n * @category Event\n */\n\nvar TopologyDescriptionChangedEvent =\n/** @internal */\nfunction TopologyDescriptionChangedEvent(topologyId, previousDescription, newDescription) {\n  _classCallCheck(this, TopologyDescriptionChangedEvent);\n\n  this.topologyId = topologyId;\n  this.previousDescription = previousDescription;\n  this.newDescription = newDescription;\n};\n\nexports.TopologyDescriptionChangedEvent = TopologyDescriptionChangedEvent;\n/**\n * Emitted when topology is initialized.\n * @public\n * @category Event\n */\n\nvar TopologyOpeningEvent =\n/** @internal */\nfunction TopologyOpeningEvent(topologyId) {\n  _classCallCheck(this, TopologyOpeningEvent);\n\n  this.topologyId = topologyId;\n};\n\nexports.TopologyOpeningEvent = TopologyOpeningEvent;\n/**\n * Emitted when topology is closed.\n * @public\n * @category Event\n */\n\nvar TopologyClosedEvent =\n/** @internal */\nfunction TopologyClosedEvent(topologyId) {\n  _classCallCheck(this, TopologyClosedEvent);\n\n  this.topologyId = topologyId;\n};\n\nexports.TopologyClosedEvent = TopologyClosedEvent;\n/**\n * Emitted when the server monitor’s ismaster command is started - immediately before\n * the ismaster command is serialized into raw BSON and written to the socket.\n *\n * @public\n * @category Event\n */\n\nvar ServerHeartbeatStartedEvent =\n/** @internal */\nfunction ServerHeartbeatStartedEvent(connectionId) {\n  _classCallCheck(this, ServerHeartbeatStartedEvent);\n\n  this.connectionId = connectionId;\n};\n\nexports.ServerHeartbeatStartedEvent = ServerHeartbeatStartedEvent;\n/**\n * Emitted when the server monitor’s ismaster succeeds.\n * @public\n * @category Event\n */\n\nvar ServerHeartbeatSucceededEvent =\n/** @internal */\nfunction ServerHeartbeatSucceededEvent(connectionId, duration, reply) {\n  _classCallCheck(this, ServerHeartbeatSucceededEvent);\n\n  this.connectionId = connectionId;\n  this.duration = duration;\n  this.reply = reply;\n};\n\nexports.ServerHeartbeatSucceededEvent = ServerHeartbeatSucceededEvent;\n/**\n * Emitted when the server monitor’s ismaster fails, either with an “ok: 0” or a socket exception.\n * @public\n * @category Event\n */\n\nvar ServerHeartbeatFailedEvent =\n/** @internal */\nfunction ServerHeartbeatFailedEvent(connectionId, duration, failure) {\n  _classCallCheck(this, ServerHeartbeatFailedEvent);\n\n  this.connectionId = connectionId;\n  this.duration = duration;\n  this.failure = failure;\n};\n\nexports.ServerHeartbeatFailedEvent = ServerHeartbeatFailedEvent;","map":null,"metadata":{},"sourceType":"script"}