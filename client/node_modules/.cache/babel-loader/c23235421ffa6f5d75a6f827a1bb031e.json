{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/pea/Code/squarranger/client/src/components/Voice.js\";\n\nimport Box from \"./Box\";\nimport { useContext } from \"react\";\nimport { Context } from '../contexts/Context';\nimport React from 'react';\n\nvar Voice = function Voice(_ref) {\n  var voiceId = _ref.voiceId;\n  var context = useContext(Context);\n  return context && context.state && context.state.voices && context.state.voices[voiceId] ? context.state.voices[voiceId].map(function (box, i) {\n    var id = i + 1;\n    return /*#__PURE__*/React.createElement(Box, {\n      key: id,\n      index: id,\n      checkStatus: box,\n      voiceId: voiceId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    });\n  }) : '';\n};\n\nexport default Voice;","map":{"version":3,"sources":["/home/pea/Code/squarranger/client/src/components/Voice.js"],"names":["Box","useContext","Context","React","Voice","voiceId","context","state","voices","map","box","i","id"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAbC,OAAa,QAAbA,OAAa;AAE3B,MAAMC,OAAO,GAAGL,UAAU,CAACC,OAAD,CAA1B;AAEA,SAAOI,OAAO,IAAIA,OAAO,CAACC,KAAnB,IAA4BD,OAAO,CAACC,KAAR,CAAcC,MAA1C,IAAoDF,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBH,OAArB,CAApD,GACLC,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBH,OAArB,EAA8BI,GAA9B,CAAkC,UAACC,GAAD,EAAMC,CAAN,EAAY;AAE5C,QAAIC,EAAE,GAAGD,CAAC,GAAC,CAAX;AACA,wBACE,oBAAC,GAAD;AACE,MAAA,GAAG,EAAEC,EADP;AAEE,MAAA,KAAK,EAAEA,EAFT;AAGE,MAAA,WAAW,EAAEF,GAHf;AAIE,MAAA,OAAO,EAAEL,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GAXD,CADK,GAaF,EAbL;AAcD,CAlBD;;AAoBA,eAAeD,KAAf","sourcesContent":["import Box from \"./Box\";\nimport { useContext } from \"react\";\nimport { Context } from '../contexts/Context'\nimport React from 'react';\n\nconst Voice = ({voiceId}) => {\n\n  const context = useContext(Context)\n\n  return context && context.state && context.state.voices && context.state.voices[voiceId] ? (\n    context.state.voices[voiceId].map((box, i) => {\n\n      let id = i+1\n      return (\n        <Box\n          key={id}\n          index={id}\n          checkStatus={box}\n          voiceId={voiceId}\n        />\n      )\n    }\n  )) : ''\n}\n \nexport default Voice;"]},"metadata":{},"sourceType":"module"}