{"ast":null,"code":"var _jsxFileName = \"/home/pea/Code/squarranger/client/src/components/AddVoice.js\",\n    _s = $RefreshSig$();\n\nimport { Context } from '../contexts/Context';\nimport { useContext } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddVoice = () => {\n  _s();\n\n  const context = useContext(Context);\n\n  const handleSubmit = e => {\n    let newVoice = [];\n\n    for (let i = 0; i < context.state.voices[0].length; i++) {\n      newVoice.push(Math.round(Math.random()));\n    }\n\n    context.state.voices.push(newVoice);\n    let sound = Math.round(Math.random() * (context.state.soundBank.length - 1));\n    context.state.sounds.push(sound);\n    context.setState({\n      voices: context.state.voices,\n      sounds: context.state.sounds,\n      soundBank: context.state.soundBank\n    });\n  };\n\n  return context ? /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleSubmit,\n    children: \"Add Voice\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : '';\n};\n\n_s(AddVoice, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = AddVoice;\nexport default AddVoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVoice\");","map":{"version":3,"sources":["/home/pea/Code/squarranger/client/src/components/AddVoice.js"],"names":["Context","useContext","React","AddVoice","context","handleSubmit","e","newVoice","i","state","voices","length","push","Math","round","random","sound","soundBank","sounds","setState"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAMC,OAAO,GAAGH,UAAU,CAACD,OAAD,CAA1B;;AACA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAE1B,QAAIC,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,KAAR,CAAcC,MAAd,CAAqB,CAArB,EAAwBC,MAA5C,EAAoDH,CAAC,EAArD,EAAyD;AACvDD,MAAAA,QAAQ,CAACK,IAAT,CAAcC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAd;AACD;;AAEDX,IAAAA,OAAO,CAACK,KAAR,CAAcC,MAAd,CAAqBE,IAArB,CAA0BL,QAA1B;AACA,QAAIS,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBX,OAAO,CAACK,KAAR,CAAcQ,SAAd,CAAwBN,MAAxB,GAA+B,CAAhD,CAAX,CAAZ;AACAP,IAAAA,OAAO,CAACK,KAAR,CAAcS,MAAd,CAAqBN,IAArB,CAA0BI,KAA1B;AACAZ,IAAAA,OAAO,CAACe,QAAR,CAAiB;AAAET,MAAAA,MAAM,EAAEN,OAAO,CAACK,KAAR,CAAcC,MAAxB;AAAgCQ,MAAAA,MAAM,EAAEd,OAAO,CAACK,KAAR,CAAcS,MAAtD;AAA8DD,MAAAA,SAAS,EAAEb,OAAO,CAACK,KAAR,CAAcQ;AAAvF,KAAjB;AACD,GAZD;;AAcA,SAAOb,OAAO,gBACZ;AACE,IAAA,OAAO,EAAEC,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY,GAMT,EANL;AAOD,CAxBD;;GAAMF,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import { Context } from '../contexts/Context'\nimport { useContext } from 'react'\nimport React from 'react';\n\n\nconst AddVoice = () => {\n  \n  const context = useContext(Context)\n  const handleSubmit = (e) => {\n\n    let newVoice = []\n\n    for (let i = 0; i < context.state.voices[0].length; i++) {\n      newVoice.push(Math.round(Math.random()))\n    }\n\n    context.state.voices.push(newVoice)\n    let sound = Math.round(Math.random() * (context.state.soundBank.length-1))\n    context.state.sounds.push(sound)\n    context.setState({ voices: context.state.voices, sounds: context.state.sounds, soundBank: context.state.soundBank })\n  }\n  \n  return context ? ( \n    <button\n      onClick={handleSubmit}\n    >\n      Add Voice\n    </button>\n   ) : '';\n}\n \nexport default AddVoice;"]},"metadata":{},"sourceType":"module"}