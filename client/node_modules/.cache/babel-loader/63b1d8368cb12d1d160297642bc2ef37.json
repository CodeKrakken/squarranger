{"ast":null,"code":"var _jsxFileName = \"/home/pea/Code/squarranger/client/src/components/Play.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Context } from '../contexts/Context';\nimport useSound from 'use-sound';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Play = () => {\n  _s();\n\n  const context = useContext(Context); // const state.voices = context.state.voices\n\n  const [play0] = useSound(context.state.soundBank[0]);\n  const [play1] = useSound(context.state.soundBank[1]);\n\n  const play = function (state) {\n    let i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    for (let voice in state.voices) {\n      voice = +voice;\n\n      if (state.voices[voice][i]) {\n        playVoice(state, voice);\n      }\n    }\n\n    if (i < state.voices[0].length) {\n      setTimeout(function () {\n        i++;\n        play(state, i);\n      }, 125);\n    }\n  };\n\n  const playVoice = (state, i) => {\n    console.log(state);\n\n    if (state.sounds[i] === 0) {\n      play0();\n    }\n\n    if (state.sounds[i] === 1) {\n      play1();\n    }\n  };\n\n  const handleClick = e => {\n    play(context.state);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: \"Play\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Play, \"lvg7rtSR+9P+5p1l2Sai2vYX/s8=\", false, function () {\n  return [useSound, useSound];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/home/pea/Code/squarranger/client/src/components/Play.js"],"names":["useContext","Context","useSound","React","Play","context","play0","state","soundBank","play1","play","i","voice","voices","playVoice","length","setTimeout","console","log","sounds","handleClick","e"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAMC,OAAO,GAAGL,UAAU,CAACC,OAAD,CAA1B,CAFiB,CAGjB;;AACA,QAAM,CAACK,KAAD,IAAUJ,QAAQ,CAACG,OAAO,CAACE,KAAR,CAAcC,SAAd,CAAwB,CAAxB,CAAD,CAAxB;AACA,QAAM,CAACC,KAAD,IAAUP,QAAQ,CAACG,OAAO,CAACE,KAAR,CAAcC,SAAd,CAAwB,CAAxB,CAAD,CAAxB;;AAEA,QAAME,IAAI,GAAG,UAACH,KAAD,EAAgB;AAAA,QAARI,CAAQ,uEAAN,CAAM;;AAE3B,SAAK,IAAIC,KAAT,IAAkBL,KAAK,CAACM,MAAxB,EAAgC;AAACD,MAAAA,KAAK,GAAG,CAACA,KAAT;;AAC/B,UAAIL,KAAK,CAACM,MAAN,CAAaD,KAAb,EAAoBD,CAApB,CAAJ,EAA4B;AAC1BG,QAAAA,SAAS,CAACP,KAAD,EAAQK,KAAR,CAAT;AACD;AACF;;AAED,QAAID,CAAC,GAACJ,KAAK,CAACM,MAAN,CAAa,CAAb,EAAgBE,MAAtB,EAA6B;AAC3BC,MAAAA,UAAU,CAAC,YAAU;AACnBL,QAAAA,CAAC;AACDD,QAAAA,IAAI,CAACH,KAAD,EAAQI,CAAR,CAAJ;AACD,OAHS,EAGR,GAHQ,CAAV;AAID;AACF,GAdD;;AAgBA,QAAMG,SAAS,GAAG,CAACP,KAAD,EAAQI,CAAR,KAAc;AAC9BM,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;;AACA,QAAIA,KAAK,CAACY,MAAN,CAAaR,CAAb,MAAoB,CAAxB,EAA2B;AAAEL,MAAAA,KAAK;AAAI;;AACtC,QAAIC,KAAK,CAACY,MAAN,CAAaR,CAAb,MAAoB,CAAxB,EAA2B;AAAEF,MAAAA,KAAK;AAAI;AACvC,GAJD;;AAMA,QAAMW,WAAW,GAAIC,CAAD,IAAO;AACzBX,IAAAA,IAAI,CAACL,OAAO,CAACE,KAAT,CAAJ;AACD,GAFD;;AAIA,sBACE;AAAQ,IAAA,OAAO,EAAEa,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtCD;;GAAMhB,I;UAIYF,Q,EACAA,Q;;;KALZE,I;AAwCN,eAAeA,IAAf","sourcesContent":["import { useContext } from \"react\";\nimport { Context } from '../contexts/Context'\nimport useSound from 'use-sound';\nimport React from 'react';\n\nconst Play = () => {\n\n  const context = useContext(Context)\n  // const state.voices = context.state.voices\n  const [play0] = useSound(context.state.soundBank[0]);\n  const [play1] = useSound(context.state.soundBank[1]);\n\n  const play = (state, i=0) => {\n\n    for (let voice in state.voices) {voice = +voice\n      if (state.voices[voice][i]) { \n        playVoice(state, voice)\n      }\n    }\n\n    if (i<state.voices[0].length){\n      setTimeout(function(){\n        i++;\n        play(state, i);\n      },125);\n    }\n  }\n\n  const playVoice = (state, i) => {\n    console.log(state)\n    if (state.sounds[i] === 0) { play0() }\n    if (state.sounds[i] === 1) { play1() }\n  }\n\n  const handleClick = (e) => {\n    play(context.state)\n  }\n\n  return ( \n    <button onClick={handleClick}>\n      Play\n    </button>\n   );\n}\n \nexport default Play;"]},"metadata":{},"sourceType":"module"}