{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EstimatedDocumentCountOperation = void 0;\n\nvar operation_1 = require(\"./operation\");\n\nvar command_1 = require(\"./command\");\n\nvar utils_1 = require(\"../utils\");\n/** @internal */\n\n\nvar EstimatedDocumentCountOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(EstimatedDocumentCountOperation, _command_1$CommandOpe);\n\n  function EstimatedDocumentCountOperation(collection) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, EstimatedDocumentCountOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EstimatedDocumentCountOperation).call(this, collection, options));\n    _this.options = options;\n    _this.collectionName = collection.collectionName;\n    return _this;\n  }\n\n  _createClass(EstimatedDocumentCountOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      if ((0, utils_1.maxWireVersion)(server) < 12) {\n        return this.executeLegacy(server, session, callback);\n      }\n\n      var pipeline = [{\n        $collStats: {\n          count: {}\n        }\n      }, {\n        $group: {\n          _id: 1,\n          n: {\n            $sum: '$count'\n          }\n        }\n      }];\n      var cmd = {\n        aggregate: this.collectionName,\n        pipeline: pipeline,\n        cursor: {}\n      };\n\n      if (typeof this.options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = this.options.maxTimeMS;\n      }\n\n      _get(_getPrototypeOf(EstimatedDocumentCountOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, function (err, response) {\n        var _a, _b;\n\n        if (err && err.code !== 26) {\n          callback(err);\n          return;\n        }\n\n        callback(undefined, ((_b = (_a = response === null || response === void 0 ? void 0 : response.cursor) === null || _a === void 0 ? void 0 : _a.firstBatch[0]) === null || _b === void 0 ? void 0 : _b.n) || 0);\n      });\n    }\n  }, {\n    key: \"executeLegacy\",\n    value: function executeLegacy(server, session, callback) {\n      var cmd = {\n        count: this.collectionName\n      };\n\n      if (typeof this.options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = this.options.maxTimeMS;\n      }\n\n      _get(_getPrototypeOf(EstimatedDocumentCountOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, function (err, response) {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        callback(undefined, response.n || 0);\n      });\n    }\n  }]);\n\n  return EstimatedDocumentCountOperation;\n}(command_1.CommandOperation);\n\nexports.EstimatedDocumentCountOperation = EstimatedDocumentCountOperation;\n(0, operation_1.defineAspects)(EstimatedDocumentCountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.CURSOR_CREATING]);","map":null,"metadata":{},"sourceType":"script"}