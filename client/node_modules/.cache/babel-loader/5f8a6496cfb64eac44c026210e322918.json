{"ast":null,"code":"import _slicedToArray from \"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pea/Code/squarranger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/pea/Code/squarranger/client/src/contexts/Context.js\";\n\nimport { createContext, useEffect, useState } from \"react\";\nimport kick from '../sounds/kick.wav';\nimport snare from '../sounds/snare.wav';\nimport React from 'react';\n\nrequire('dotenv'); // `mongodb+srv://CodeKrakken:wcQjPFIGo2aEU7CR@cluster0.bfg8v.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;\n\n\nvar username = process.env.MONGODB_USERNAME;\nvar password = process.env.MONGODB_PASSWORD;\n\nvar _require = require('mongodb'),\n    MongoClient = _require.MongoClient;\n\nvar uri = \"mongodb+srv://\".concat(username, \":\").concat(password, \"@cluster0.ra0fk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\nvar mongo = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db;\nvar collection;\nvar dbName = \"magic-money-tree\";\nexport var Context = createContext();\n\nvar ContextProvider = function ContextProvider(props) {\n  useEffect(function () {\n    function setupDB() {\n      return _setupDB.apply(this, arguments);\n    }\n\n    function _setupDB() {\n      _setupDB = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return mongo.connect();\n\n              case 2:\n                db = mongo.db(dbName);\n                collection = db.collection(\"price-data\");\n                console.log(collection); // console.log(\"Database setup complete\")\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _setupDB.apply(this, arguments);\n    }\n\n    setupDB();\n  });\n  var data = {\n    voices: [],\n    sounds: [],\n    soundBank: [kick, snare]\n  };\n\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      state: state,\n      setState: setState\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContextProvider;","map":{"version":3,"sources":["/home/pea/Code/squarranger/client/src/contexts/Context.js"],"names":["createContext","useEffect","useState","kick","snare","React","require","username","process","env","MONGODB_USERNAME","password","MONGODB_PASSWORD","MongoClient","uri","mongo","useNewUrlParser","useUnifiedTopology","db","collection","dbName","Context","ContextProvider","props","setupDB","connect","console","log","data","voices","sounds","soundBank","state","setState","children"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAC,OAAO,CAAC,QAAD,CAAP,C,CAEA;;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAA7B;AACA,IAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAR,CAAYG,gBAA7B;;eACwBN,OAAO,CAAC,SAAD,C;IAAvBO,W,YAAAA,W;;AACR,IAAMC,GAAG,2BAAoBP,QAApB,cAAgCI,QAAhC,4EAAT;AACA,IAAMI,KAAK,GAAG,IAAIF,WAAJ,CAAgBC,GAAhB,EAAqB;AAAEE,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAArB,CAAd;AACA,IAAIC,EAAJ;AACA,IAAIC,UAAJ;AACA,IAAMC,MAAM,GAAG,kBAAf;AAEA,OAAO,IAAMC,OAAO,GAAGrB,aAAa,EAA7B;;AAEP,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAEjCtB,EAAAA,SAAS,CAAC,YAAM;AAAA,aAECuB,OAFD;AAAA;AAAA;;AAAA;AAAA,0EAEd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQT,KAAK,CAACU,OAAN,EADR;;AAAA;AAEEP,gBAAAA,EAAE,GAAGH,KAAK,CAACG,EAAN,CAASE,MAAT,CAAL;AACAD,gBAAAA,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,YAAd,CAAb;AACAO,gBAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ,EAJF,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFc;AAAA;AAAA;;AASdK,IAAAA,OAAO;AAER,GAXQ,CAAT;AAaA,MAAMI,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,EADG;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXC,IAAAA,SAAS,EAAE,CAAC5B,IAAD,EAAOC,KAAP;AAHA,GAAb;;AAfiC,kBAqBPF,QAAQ,CAAC0B,IAAD,CArBD;AAAA;AAAA,MAqB1BI,KArB0B;AAAA,MAqBnBC,QArBmB;;AAuBjC,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACD,MAAAA,KAAK,EAALA,KAAD;AAAQC,MAAAA,QAAQ,EAARA;AAAR,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACW,QADT,CADF;AAKD,CA5BD;;AA8BA,eAAeZ,eAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport kick   from '../sounds/kick.wav';\nimport snare  from '../sounds/snare.wav'\nimport React from 'react';\n\nrequire('dotenv')\n\n// `mongodb+srv://CodeKrakken:wcQjPFIGo2aEU7CR@cluster0.bfg8v.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;\n\nconst username = process.env.MONGODB_USERNAME\nconst password = process.env.MONGODB_PASSWORD\nconst { MongoClient } = require('mongodb');\nconst uri = `mongodb+srv://${username}:${password}@cluster0.ra0fk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;\nconst mongo = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });\nlet db\nlet collection\nconst dbName = \"magic-money-tree\";\n\nexport const Context = createContext()\n\nconst ContextProvider = (props) => {\n\n  useEffect(() => {\n\n    async function setupDB() {\n      await mongo.connect()\n      db = mongo.db(dbName);\n      collection = db.collection(\"price-data\")\n      console.log(collection)\n      // console.log(\"Database setup complete\")\n    }\n    setupDB()\n\n  })\n\n  const data = {\n    voices: [],\n    sounds: [],\n    soundBank: [kick, snare]\n  }\n\n  const [state, setState] = useState(data)\n  \n  return (\n    <Context.Provider value={{state, setState}}>\n      {props.children}\n    </Context.Provider>\n  )\n}\n\nexport default ContextProvider"]},"metadata":{},"sourceType":"module"}